on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6', platform: windows-x86_64}
          - {os: windows-latest, r: 'release', platform: windows-x86_64}
          - {os: macOS-latest, r: '3.6', platform: osx-x86_64-clang}
          - {os: macOS-latest, r: 'release', platform: osx-x86_64-clang}
          - {os: ubuntu-latest, r: '3.6', platform: linux-x86_64-ubuntu-gcc}
          - {os: ubuntu-latest, r: 'release', platform: linux-x86_64-ubuntu-gcc}

    env:
      # otherwise remotes::fun() errors cause the build to fail. Example: Unavailability of binaries
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      # macOS >= 10.15.4 linking
      SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

    steps:
      - name: CHECKOUT CODE
        uses: actions/checkout@v2

      - name: SETUP PYTHON
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: SETUP R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: SETUP PANDOC
        uses: r-lib/actions/setup-pandoc@master

      - name: FIND ALL R PACKAGES DEPENDECIES OF RGEE
        run: |
          install.packages('remotes')
          install.packages('knitr')
          install.packages('pillar') # winbug
          install.packages('vctrs')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: RETICULATE_PYTHON SETTING
        run: |
          reticulate_dir <- path.expand("~/.Renviron")
          fileConn <- file(reticulate_dir)
          pyPATH <- Sys.getenv("pythonLocation")
          writeLines(sprintf('RETICULATE_PYTHON="%s"', pyPATH), fileConn)
          close(fileConn)
        shell: Rscript {0}

      - name: INSTALL PYTHON DEPENDENCIES
        run: |
          pip install --upgrade pip
          pip install setuptools oauth2client earthengine-api numpy virtualenv

      - name: CACHE R PACKAGES [LINUX and macOS]
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: PREBUILD TESTING
        run: |
          earthengine -h

      - name: INSTALL dependencies and rcmdcheck
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: CHECK
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: UPLOAD CHECK RESULTS
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
