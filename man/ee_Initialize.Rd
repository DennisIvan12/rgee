% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_Initialize.R
\name{ee_Initialize}
\alias{ee_Initialize}
\title{Authenticate and Initialize Earth Engine}
\usage{
ee_Initialize(email = NULL, drive = FALSE, gcs = FALSE, quiet = FALSE)
}
\arguments{
\item{email}{Character (optional, e.g. \code{data.colec.fbf@gmail.com}). The email
name is used as a folder inside the path \code{rgee::ee_get_earthengine_path()}.
This enable a multi-user support allowing to target a specific
Google identity.}

\item{drive}{Logical (optional). If TRUE, the drive credential
will be cached in the path \code{rgee::ee_get_earthengine_path()}.}

\item{gcs}{Logical. If TRUE, the Google Cloud Storage
credential will be cached in the path \code{rgee::ee_get_earthengine_path()}.}

\item{quiet}{Logical. Suppress info messages.}
}
\description{
Authorize rgee to manage Earth Engine resources, Google
Drive, and Google Cloud Storage. The \code{ee_initialize()} via
web-browser will ask to sign in to your Google account and
allows you to grant permission to manage resources. This function is
a wrapper around \code{rgee::ee$Initialize()}.
}
\details{
\code{ee_Initialize(...)} can also manage Google drive and Google
Cloud Storage resources using the R packages googledrive and
googlecloudStorageR, respectively. By default, rgee does not require
them, these are only necessary for exporting and importing tasks.
All user credentials are saved in the directory
\code{~/.config/earthengine/}, if a user does not specify the email
argument all user credentials will be saved in a subdirectory
called \code{ndef}.
}
\examples{
\dontrun{
library(rgee)

ee_reattach() # reattach ee as a reserved word
# Simple init - Load just the Earth Engine credential
ee_Initialize()

# Advanced init - Load full credentials
ee_Initialize(
  email = "your_email@gmail.com",
  drive = TRUE,
  gcs = TRUE
)

ee_user_info()
}
}
\seealso{
remove credential function: \cr
\link[rgee]{ee_clean_credentials}
}
