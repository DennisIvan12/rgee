% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_Map.R
\docType{data}
\name{Map}
\alias{Map}
\title{Module to display Earth Engine (EE) spatial objects}
\format{
An object of class environment with the
following functions:
\itemize{
\item  \strong{addLayer(eeObject, visParams, name = NULL, shown = TRUE,
opacity = 1)}: Adds a given EE object to the map as a layer. \cr
\itemize{
\item \strong{eeObject:} The object to add to mapview.\cr
\item \strong{visParams:} List of parameters for visualization.
See details.\cr
\item \strong{name:} The name of the layer.\cr
\item \strong{shown:} A flag indicating whether the
layer should be on by default. \cr
\item \strong{opacity:} The layer's opacity represented as a number
between 0 and 1. Defaults to 1. \cr
}
\item \strong{setCenter(lon = 0, lat = 0, zoom = NULL)}: Centers the map
view at the given coordinates with the given zoom level. If no zoom level
is provided, it uses 1 by default.
\itemize{
\item \strong{lon:} The longitude of the center, in degrees.\cr
\item \strong{lat:} The latitude of the center, in degrees.\cr
\item \strong{zoom:} The zoom level, from 1 to 24.
}
\item \strong{setZoom(zoom = NULL)}: Sets the zoom level of the map.
\itemize{
\item \strong{zoom:} The zoom level, from 1 to 24.
}
\item \strong{centerObject(eeObject, zoom = NULL,
maxError = ee$ErrorMargin(1))}: Centers the
map view on a given object. If no zoom level is provided, it will
be predicted according to the bounds of the Earth Engine object specified.
\itemize{
\item \strong{eeObject:} EE object.\cr
\item \strong{zoom:} The zoom level, from 1 to 24.
\item \strong{maxError:} 	Max error when input
image must be reprojected to an explicitly
requested result projection or geodesic state.
}
}
}
\usage{
Map
}
\description{
Create interactive visualizations of spatial EE objects
(ee.Geometry, ee.Image, ee.Feature, and ee.FeatureCollection)
through \link[=mapview]{mapview}.
}
\details{
\code{Map} takes advantage of the
\href{https://developers.google.com/earth-engine/api_docs#ee.data.getmapid}{
getMapId} EE method to fetch and return an ID dictionary beind used to create
layers in a \link[=mapview]{mapview} object. Users can specify visualization
parameters to Map\$addLayer by using the visParams argument. It will depend
on the type of spatial EE object. For \code{ee$Image}, the
\href{https://developers.google.com/earth-engine/image_visualization}{
parameters} available are:

\tabular{lll}{
\strong{Parameter}\tab \strong{Description}  \tab \strong{Type}\cr
\strong{bands}    \tab  Comma-delimited list of three band names to be
mapped to RGB     \tab  list \cr
\strong{min}      \tab  Value(s) to map to 0 \tab  number or list of three
numbers, one for each band \cr
\strong{max}      \tab  Value(s) to map to 1 \tab  number or list of three
numbers, one for each band \cr
\strong{gain}     \tab  Value(s) by which to multiply each pixel value \tab
number or list of three numbers, one for each band \cr
\strong{bias}     \tab  Value(s) to add to each Digital Number (DN)
value \tab number or list of three numbers, one for each band \cr
\strong{gamma}    \tab  Gamma correction factor(s) \tab  number or list of
three numbers, one for each band \cr
\strong{palette}  \tab  List of CSS-style color strings
(single-band images only) \tab  comma-separated list of hex strings \cr
\strong{opacity}   \tab  The opacity of the layer (0.0 is fully transparent
and 1.0 is fully opaque) \tab  number \cr
}

If you add an \code{ee$Image} to the map without any additional parameters,
by default \code{Map$addLayer()} assigns the first three bands to red,
green, and blue bands, respectively. The default stretch is based on the
min-max range. By the other hand, for \code{ee$Geometry}, \code{ee$Feature},
and \code{ee$FeatureCollection}. The available parameters are:

\itemize{
\item \strong{color}: A hex string in the format RRGGBB specifying the
color to use for drawing the features. By default 000000.
\item \strong{pointRadius}: The radius of the point markers. By default 3.
\item \strong{strokeWidth}: The width of lines and polygon borders. By
default 3.
}
}
\examples{
\dontrun{
library(rgee)

ee_reattach() # reattach ee as a reserved word
ee_Initialize()

# Case 1: Geometry*
geom <- ee$Geometry$Point(list(-73.53, -15.75))
Map$centerObject(geom, zoom = 13)
m1 <- Map$addLayer(
  eeObject = geom,
  visParams = list(
    pointRadius = 10,
    color = "FF0000"
  ),
  name = "Geometry-Arequipa"
)

# Case 2: Feature
eeobject_fc <- ee$FeatureCollection("users/csaybar/DLdemos/train_set")$
  first()
m2 <- Map$addLayer(
  eeObject = ee$Feature(eeobject_fc),
  name = "Feature-Arequipa"
)
m2 + m1

# Case 3: FeatureCollection
eeobject_fc <- ee$FeatureCollection("users/csaybar/DLdemos/train_set")
Map$centerObject(eeobject_fc)
m3 <- Map$addLayer(eeObject = eeobject_fc, name = "FeatureCollection")
m3 + m2 + m1

# Case 4: Image
image <- ee$Image("LANDSAT/LC08/C01/T1/LC08_044034_20140318")
Map$centerObject(image)
m4 <- Map$addLayer(
  eeObject = image,
  visParams = list(
    bands = c("B4", "B3", "B2"),
    max = 10000
  ),
  name = "SF"
)
m4
}
}
\keyword{datasets}
